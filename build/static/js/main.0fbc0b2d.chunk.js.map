{"version":3,"sources":["logo.svg","components/Nav.js","components/About.js","components/TIckers.js","components/Contact.js","App.js","reportWebVitals.js","index.js","components/Tickers.module.sass"],"names":["className","to","href","subreddits","map","sub","TicksFromSub","subreddit","useState","data","updateData","alreadySynced","useRef","axios","get","headers","then","res","current","tickerRows","console","log","keys","Object","tickers","slice","sort","a","b","count","key","push","TickerRow","ticker","loaded","dataIsEmpty","length","noTickers","tickerTable","styles","table","left","main_section","title","lastUpdated","loader","class","ctn","pos_sent","pos_sent_cnt","neg_sent","neg_sent_cnt","neut_sent_cnt","total_sent_cnt","sent_percent","sent_cnt","toFixed","name","id","cols","rows","App","Nav","exact","path","component","Home","About","Contact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0fbc0b2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nexport default function () {\n   \n    return (\n        <nav>\n            <h1 className='logo'> Popular Tickers! </h1>\n            <ul className='nav-links'>\n                <Link to={'/'}>\n                    <li className='nav-link'>Home</li>\n                </Link>\n                <Link to={'/about'}>\n                    <li className='nav-link'>About</li>\n                </Link>\n                <Link to={'/contact'}>\n                    <li className='nav-link'>Contact</li>\n                </Link>\n            </ul>\n        </nav>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\n\nexport default function () {\n    \n    return (\n        <div className='about'>            \n            <h1>\n                Find out what stocks Reddit is talking about!\n            </h1>\n\n            <br/>\n            <a href=\"/\">ðŸ‘ˆ Back to home</a>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\nimport styles from \"./Tickers.module.sass\"\nimport './icons.css'\n\nimport axios from 'axios'\n\nconst subreddits = [\n    'wallstreetbets',\n    'stocks',\n    'stockmarket',\n    'spacs',\n    'investing',\n    'options',\n    'robinhood',\n    'stock_picks'\n]\n\nexport default function () {\n    return (\n        <div>\n            {\n                subreddits.map(sub => <TicksFromSub subreddit={sub}/>)\n            }\n        </div>\n    )\n}\n\nfunction TicksFromSub({ subreddit }) {\n    const [data, updateData] = useState()\n    const alreadySynced = useRef(false)\n\n    axios.get(`https://redditstocks.herokuapp.com/` + subreddit, {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n        }})\n    .then(res => {\n        if (!alreadySynced.current) {\n            updateData(res.data)\n            alreadySynced.current = true   \n        }\n    })\n\n    let tickerRows = []\n    if (data) {\n        console.log(data['tickers'])\n        let keys = Object.keys(data.tickers)\n        // limit to 20 tickers\n        keys = keys.slice(0, 20)\n        // sort the tickers by mention count\n        keys.sort((a, b) => data.tickers[b].count - data.tickers[a].count )\n        \n        for (const key of keys) {\n            tickerRows.push(\n                <TickerRow {...data.tickers[key]} ticker={key} key={key}/>\n            )\n        }\n    }\n\n    const loaded = data ? true : false\n    const dataIsEmpty = !data || Object.keys(data.tickers).length == 0    \n\n    const noTickers = (\n        <div>Didn't find enough stocks being discussed.</div>\n    )\n    const tickerTable = (\n        <table className={styles.table}>\n            <thead>\n            <tr>\n                <th className={styles.left}>Ticker</th>\n                <th>Mentions</th>\n                <th>Positive Strength</th>\n                <th>% positive</th>\n                <th>Negative Strength</th>\n                <th>% Negative</th>\n                <th>% Neutral</th>\n            </tr>\n            </thead>\n            <tbody>{tickerRows}</tbody>\n        </table>\n    )\n    const main_section = (\n        <>\n        <div className={styles.title}>\n            <h1 className={styles.sub}>r/{subreddit}</h1>\n            <div className={styles.lastUpdated}>\n                <p>Last updated:</p>\n                <p>{data && data['last_updated']}</p>\n            </div>\n        </div>\n        { dataIsEmpty ? noTickers : tickerTable } \n        </>\n    )\n    const loader = (\n        <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    )\n\n        \n    return (\n        <div className={styles.ctn}>\n            { loaded ? main_section : loader }\n        </div>\n    )\n}\n\nfunction TickerRow({ ticker, count, pos_sent, pos_sent_cnt=0, neg_sent, neg_sent_cnt=0, neut_sent_cnt=0}) {\n    let total_sent_cnt = pos_sent_cnt + neg_sent_cnt + neut_sent_cnt    \n\n    const sent_percent = sent_cnt => sent_cnt ? (sent_cnt/total_sent_cnt*100).toFixed(2) + '%' : null\n    return (\n        <tr>\n            <td className={styles.left}>{ticker}</td>\n            <td>{count}</td>\n            <td>{pos_sent && (pos_sent*100).toFixed(0)}</td>\n            <td>{sent_percent(pos_sent_cnt)}</td>\n            <td>{neg_sent && (neg_sent*100).toFixed(0)}</td>\n            <td>{sent_percent(neg_sent_cnt)}</td>\n            <td>{sent_percent(neut_sent_cnt)}</td>\n        </tr>\n    )\n}","import React, { useEffect, useState, useRef } from 'react'\n\nexport default function () {\n    \n    return (\n        <div className='about'>            \n            <h1>\n                Contact\n            </h1>\n            <div>\n                    Suggestions? Comments?\n            </div>\n            <br/>\n            <div className='contact-comment'>\n                <textarea className='contact-text-area' name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n                <br/>\n                <div className='submit'>\n                    Submit\n                </div>\n            </div>\n            <br/>\n            <br />\n            <a href=\"/\">ðŸ‘ˆ Back to home</a>\n        </div>\n    )\n}","import logo from './logo.svg';\nimport './App.css';\n\nimport Nav from './components/Nav'\nimport About from './components/About'\nimport Home from './components/TIckers'\nimport Contact from './components/Contact'\n\nimport { BrowserRouter, Route, Switch, useParams } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <BrowserRouter>\n                <div className=\"App\">\n                <Nav />\n                <Switch>    \n                    <Route exact path='/' component={Home} />\n                    <Route path='/about' component={About} />\n                    <Route path='/contact' component={Contact} />\n                   \n                    <Route path='*' component={()=>(<div>Oh no!!!! Page not found.</div>)} />\n                </Switch>\n                </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ctn\":\"Tickers_ctn__2o6L3\",\"left\":\"Tickers_left__DHNC5\",\"title\":\"Tickers_title__3ReNq\",\"sub\":\"Tickers_sub__3049l\",\"lastUpdated\":\"Tickers_lastUpdated__3mRRP\",\"table\":\"Tickers_table__1ojHG\"};"],"sourceRoot":""}